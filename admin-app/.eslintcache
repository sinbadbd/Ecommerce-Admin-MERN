[{"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reportWebVitals.js":"1","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/App.js":"2","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/index.js":"3","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/Header/index.js":"4","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/Layout/index.js":"5","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Signin/index.js":"6","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Signup/index.js":"7","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Home/index.js":"8","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/store/index.js":"9","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/index.js":"10","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/constance.js":"11","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/auth.actions.js":"12","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/index.js":"13","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/auth.reducers.js":"14","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/helper/axios.js":"15","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/HOC/PrivateRoute.js":"16","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/UrlConfig.js":"17","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/user.reducers.js":"18","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Product/product.js":"19","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Order/Orders.js":"20","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/order.reducer.js":"21","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Category/category.js":"22","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/category.action.js":"23","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/category.reducer.js":"24","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/product.action.js":"25","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/UI/Input/index.js":"26","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/UI/Modal/index.js":"27","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/initialData.action.js":"28","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/product.reducer.js":"29","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/user.action.js":"30"},{"size":362,"mtime":1606677502782,"results":"31","hashOfConfig":"32"},{"size":1374,"mtime":1608989590484,"results":"33","hashOfConfig":"32"},{"size":995,"mtime":1608695560728,"results":"34","hashOfConfig":"32"},{"size":1613,"mtime":1607958841037,"results":"35","hashOfConfig":"32"},{"size":1616,"mtime":1608445604124,"results":"36","hashOfConfig":"32"},{"size":2449,"mtime":1608483178417,"results":"37","hashOfConfig":"32"},{"size":3591,"mtime":1608483178415,"results":"38","hashOfConfig":"32"},{"size":313,"mtime":1607958142338,"results":"39","hashOfConfig":"32"},{"size":210,"mtime":1607328246117,"results":"40","hashOfConfig":"32"},{"size":469,"mtime":1607958722209,"results":"41","hashOfConfig":"32"},{"size":1310,"mtime":1608530939002,"results":"42","hashOfConfig":"32"},{"size":1967,"mtime":1608611435859,"results":"43","hashOfConfig":"32"},{"size":170,"mtime":1608531269976,"results":"44","hashOfConfig":"32"},{"size":1496,"mtime":1608565739339,"results":"45","hashOfConfig":"32"},{"size":284,"mtime":1607748783470,"results":"46","hashOfConfig":"32"},{"size":425,"mtime":1607824232740,"results":"47","hashOfConfig":"32"},{"size":154,"mtime":1608663922422,"results":"48","hashOfConfig":"32"},{"size":828,"mtime":1607701313494,"results":"49","hashOfConfig":"32"},{"size":10801,"mtime":1608889957640,"results":"50","hashOfConfig":"32"},{"size":205,"mtime":1607826727549,"results":"51","hashOfConfig":"32"},{"size":0,"mtime":1607958194448,"results":"52","hashOfConfig":"32"},{"size":12989,"mtime":1610469979954,"results":"53","hashOfConfig":"32"},{"size":2058,"mtime":1610470044676,"results":"54","hashOfConfig":"32"},{"size":2309,"mtime":1608572270912,"results":"55","hashOfConfig":"32"},{"size":689,"mtime":1608889752498,"results":"56","hashOfConfig":"32"},{"size":674,"mtime":1609093998619,"results":"57","hashOfConfig":"32"},{"size":696,"mtime":1608661459367,"results":"58","hashOfConfig":"32"},{"size":721,"mtime":1608902303252,"results":"59","hashOfConfig":"32"},{"size":458,"mtime":1608666682687,"results":"60","hashOfConfig":"32"},{"size":815,"mtime":1608611472089,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1itkzoe",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reportWebVitals.js",[],["138","139"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/App.js",["140","141"],"import React, { useEffect } from 'react';\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './Container/Home/index';\nimport SignIn from './Container/Signin/index';\nimport SignUp from './Container/Signup/index';\nimport PrivateRoute from './Component/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData , getAllCategory} from './actions'\n\nimport { Route, Switch } from \"react-router-dom\";\nimport Products from './Container/Product/product';\nimport Orders from './Container/Order/Orders';\nimport Category from './Container/Category/category';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n\n     dispatch(getInitialData());\n    // dispatch(getAllCategory())\n  }, []);\n\n  return (\n    <div className=\"App\"> \n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        \n        <PrivateRoute path=\"/category\" component={Category} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n      </Switch> \n    </div>\n  );\n}\n\nexport default App;\n",["142","143"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/Header/index.js",["144"],"import React from 'react'\nimport { Navbar, Nav, Form } from 'react-bootstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { signout } from '../../actions';\n\nconst Header = (props) => {\n\n\n  const auth = useSelector(state => state.auth)\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch(signout())\n  }\n\n  const renderLoggedInLinks = () => {\n    return (\n      <Nav>\n        <li className=\"nav-item\">\n          <span className=\"nav-link\" onClick={logout}>Signout</span>\n        </li> \n      </Nav>\n    )\n  }\n\n  const renderNonLoggedInLink = () => {\n    return(\n      <Nav>\n        <li className=\"nav-item\">\n          <NavLink to=\"signin\" className=\"nav-link\">Signin</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"signup\" className=\"nav-link\">Signup</NavLink>\n        </li>\n      </Nav>\n    )\n  }\n\n\n\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\" className=\"navbar-brand\">Admin Dashboard</Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {/* <Nav className=\"justify-content-end mr-auto\">\n                    <Nav.Link href=\"#features\">Signin</Nav.Link>\n                    <Nav.Link href=\"#pricing\">Signup</Nav.Link>\n                </Nav> */}\n        </Navbar.Collapse>\n\n            {\n              auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLink()\n            }    \n\n      </Navbar>\n    </div>\n  )\n}\n\nexport default Header\n","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/Layout/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Signin/index.js",["145","146"],"import React, { useState } from 'react'\nimport { Container,Row,Col ,Form,Button } from 'react-bootstrap'\nimport Layout from '../../Component/Layout'\nimport Input from  '../../Component/UI/Input/index';\n\nimport { useDispatch,useSelector } from 'react-redux';\n\nimport { login } from '../../actions';\nimport { Redirect } from 'react-router-dom';\n\n\nconst  SignIn = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const auth = useSelector(state => state.auth)\n    const dispatch = useDispatch();\n\n    const userLogin = (e) => {\n        e.preventDefault();\n        const user = {\n            email, password\n        }\n        dispatch(login(user));\n    }\n\n    if(auth.authenticate){\n        return <Redirect to={`/`}/>\n    }\n\n    return (\n        <>\n            <Layout>\n                <Container>\n                    <Row className=\"mx-auto\">\n                        <Col xs={5}>\n                            <Form onSubmit={userLogin}>\n                            <Col>\n                                        <Input \n                                                label=\"Email\"\n                                                placeholder=\"Email\"\n                                                value={email}\n                                                type=\"email\"\n                                                onChange={(e)=> setEmail(e.target.value)}\n\n                                        />\n                                  </Col> \n                                  <Col>\n                                        <Input \n                                                label=\"Password\"\n                                                placeholder=\"password\"\n                                                value={password}\n                                                type=\"password\"\n                                                onChange={(e)=>setPassword(e.target.value)}\n\n                                        />\n                                  </Col> \n        \n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Submit\n                                    </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </Layout>\n        </>\n    )\n}\n\nexport default SignIn",["147","148"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Signup/index.js",["149","150"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Home/index.js",["151","152","153","154"],"import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport Layout from '../../Component/Layout'\nimport { NavLink } from 'react-router-dom';\n\nconst Home = (props) => {\n    return (\n        <>\n            <Layout sidebar>\n \n            </Layout>\n        </>\n    )\n}\n\nexport default Home\n",["155","156"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/store/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/constance.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/auth.actions.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/auth.reducers.js",["157","158","159"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/helper/axios.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/HOC/PrivateRoute.js",[],["160","161"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/UrlConfig.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/user.reducers.js",["162","163"],"import {userConstants} from '../actions/constance'\n\n\nconst initState = {\n    error:null,\n    message: '',\n    loading: false\n}\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case userConstants.USER_SIGNUP_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case userConstants.USER_SIGNUP_SUCCESS:{\n            state = {\n                ...state,\n                loading: false,\n                message: action.payload.message\n            }\n            break;\n        }   \n        case userConstants.USER_SIGNUP_FAILURE: {\n            state = {\n                ...state,\n                loading: false,\n                message: action.payload.error\n            }\n            break;\n        }\n    }\n    return state;\n}\n",["164","165"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Product/product.js",["166","167","168"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Order/Orders.js",[],["169","170"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/order.reducer.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Container/Category/category.js",["171","172","173","174"],"import React, { useState } from \"react\";\nimport { Col, Container, Row, Form, Button } from \"react-bootstrap\";\nimport Layout from \"../../Component/Layout\";\nimport Input from \"../../Component/UI/Input/index\";\nimport Modal from \"../../Component/UI/Modal/index\";\n\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {\n    MdCheckBoxOutlineBlank,\n    MdCheckBox,\n    MdChevronRight,\n    MdExpandMore,\n    MdIndeterminateCheckBox\n} from \"react-icons/md\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, updateCategorys } from \"../../actions\";\n\n\nconst Category = (props) => {\n    const category = useSelector((state) => state.category);\n\n    const [show, setShow] = useState(false);\n\n    const [categoryName, setcategoryName] = useState();\n    const [categoryParentId, setcategoryParentId] = useState();\n    const [categoryImage, setcategoryImage] = useState();\n    const [checked, setchecked] = useState([]);\n    const [expanded, setexpanded] = useState([]);\n    const [checkArrays, setcheckArrays] = useState([]);\n    const [expandedArrays, setexpandedArrays] = useState([]);\n    // const [updateCategory, setupdateCategory] = useState(false);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n\n\n    const handleClose = () => {\n        const form = new FormData();\n        form.append('name', categoryName);\n        form.append('parentId', categoryParentId);\n        form.append('categoryImage', categoryImage);\n\n        dispatch(addCategory(form));\n\n        setcategoryName('');\n        setcategoryParentId('');\n\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.childreen.length > 0 && renderCategories(category.childreen)\n                }\n            );\n        }\n        return myCategories;\n    };\n\n\n    const createCategoryList = (categories, option = []) => {\n        for (let category of categories) {\n            option.push({ value: category._id, name: category.name, parentId: category._id })\n\n            if (category.childreen.length > 0) {\n                createCategoryList(category.childreen, option)\n            }\n        }\n        return option;\n    }\n\n    const handleCategoryImageChange = (e) => {\n        setcategoryImage(e.target.files[0]);\n    }\n\n\n    const updateCategory = () => {\n        setUpdateCategoryModal(true);\n\n        const categories = createCategoryList(category.categories)\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryParentId, index) => {\n            const category = categories.find((category, _index) => categoryParentId === category.value);\n            category && checkedArray.push(category);\n        });\n\n        expanded.length > 0 && expanded.forEach((categoryParentId, index) => {\n            const category = categories.find((category, _index) => categoryParentId === category.value);\n            category && expandedArray.push(category);\n        })\n        setcheckArrays(checkedArray)\n        setexpandedArrays(expandedArray)\n        console.log({ checked, expanded, categories, expandedArray, checkedArray })\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        if (type == \"checked\") {\n            const updatedCheckedArray = checkArrays.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setcheckArrays(updatedCheckedArray);\n        } else if (type == \"expanded\") {\n            const updatedExpandedArray = expandedArrays.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setexpandedArrays(updatedExpandedArray);\n        }\n    }\n\n    const updateCategoryFrom = () => {\n        const form = new FormData();\n        \n        expandedArrays.forEach((item, index) =>{\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        })\n\n        checkArrays.forEach((item, index) =>{\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        })\n        console.log(\"form\",form)\n        console.log(\"update-category\", dispatch(updateCategorys(form)));\n        setUpdateCategoryModal(false)\n    }\n\n    const renderUpdateCategoryModal = () => {\n        return (\n\n\n            <Modal show={updateCategoryModal}\n                handleClose={() => updateCategoryFrom()}\n                title={'Update Category'} size=\"lg\">\n                <Form>\n\n                    <Row>\n                        <Col>\n                            <h5>Expand Category</h5>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        {\n                            expandedArrays.length > 0 &&\n                            expandedArrays.map((item, index) =>\n\n                                <Row key={index}>\n                                    <Col>\n                                        <Input\n                                            placeholder=\"Name\"\n                                            value={item.name}\n                                            onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <select className=\"form-control mb-3\"\n                                            value={item.parentId}\n                                            onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\n                                            <option>Select category</option>\n                                            {\n                                                createCategoryList(category.categories).map(option =>\n                                                    <option key={option.value} value={option.value}>{option.name}</option>)\n                                            }\n                                        </select>\n                                    </Col>\n                                    <Col>\n                                        <select className=\"form-control\">\n                                            <option>Select category</option>\n                                            <option value=\"store\">Store</option>\n                                            <option value=\"product\">Product</option>\n                                            <option value=\"page\">Page</option>\n                                        </select>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n                    </Row>\n\n\n                    <Row>\n                        <Col>\n                            <h5>Checked</h5>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        {\n                            checkArrays.length > 0 &&\n                            checkArrays.map((item, index) =>\n\n                                <Row key={index}>\n                                    <Col>\n                                        <Input\n                                            placeholder=\"Name\"\n                                            value={item.name}\n                                            onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <select className=\"form-control mb-3\"\n                                            value={item.parentId}\n                                            onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\n                                            <option>Select category</option>\n                                            {\n                                                createCategoryList(category.categories).map(option =>\n                                                    <option key={option.value} value={option.value}>{option.name}</option>)\n                                            }\n                                        </select>\n                                    </Col>\n                                    <Col>\n\n                                        <select className=\"form-control\">\n                                            <option>Select category</option>\n                                            <option value=\"store\">Store</option>\n                                            <option value=\"product\">Product</option>\n                                            <option value=\"page\">Page</option>\n                                        </select>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n                    </Row>\n\n\n                </Form>\n\n            </Modal>\n        )\n    }\n\n    const renderAddCategory = () => {\n        return (\n            <Modal show={show} handleClose={handleClose} title={'Add Category'}>\n                <Form>\n                    <Input\n                        label=\"Category Name\"\n                        placeholder=\"Name\"\n                        value={categoryName}\n                        type=\"email\"\n                        onChange={(e) => setcategoryName(e.target.value)}\n                    />\n                    <select className=\"form-control mb-3\"\n                        value={categoryParentId}\n                        onChange={(e) => setcategoryParentId(e.target.value)}>\n                        <option>Select category</option>\n                        {\n                            createCategoryList(category.categories).map(option =>\n                                <option key={option.value} value={option.value}>{option.name}</option>)\n                        }\n                    </select>\n\n                    <div className=\"custom-file form-control\">\n                        <input type=\"file\" className=\"custom-file-input\" name=\"categoryImage\" onChange={handleCategoryImageChange}></input>\n                        <label className=\"custom-file-label\"  >Choose file</label>\n                    </div>\n                </Form>\n\n            </Modal>\n        )\n    }\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row className=\"pt-4\">\n                    <Col md={10}>\n                        <h4>Category</h4>\n                    </Col>\n                    <Col>\n                        <Button variant=\"primary\" onClick={handleShow}>\n                            Add\n                        </Button>{\" \"}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ul className=\"nav flex-column\">\n                            {/* {renderCategories(category.categories)} */}\n                        </ul>\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setchecked(checked)}\n                            onExpand={expanded => setexpanded(expanded)}\n                            icons={{\n                                check: <MdCheckBox />,\n                                uncheck: <MdCheckBoxOutlineBlank />,\n                                halfCheck: <MdChevronRight />,\n                                expandClose: <MdExpandMore />,\n                                expandOpen: <MdIndeterminateCheckBox />\n                            }}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                    <Col md={2}>\n                        <Button className=\"btn btn-danger \">Delete</Button>\n                    </Col>\n                    <Col md={2}>\n                        <Button onClick={() => updateCategory()} className=\"btn btn-primary \">Update</Button>\n                    </Col>\n                </Row>\n            </Container>\n\n\n            { renderAddCategory() }\n\n            { renderUpdateCategoryModal() }\n\n        </Layout>\n    );\n};\n\nexport default Category;\n","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/category.action.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/category.reducer.js",["175","176"],"import { categoryConstants } from \"../actions/constance\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null,\n};\n\n\n\nconst buildCategories = (parentId, categories, category) => {\n    const myCategories = [];\n\n    if(parentId === undefined){ // ONLY PARENT\n        return[\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                childreen: []\n            }\n        ]  \n    }\n\n\n    for (let cat of categories) { \n\n        if( cat._id === parentId) { // FOR CHILREN\n\n            myCategories.push({ \n                ...cat,\n                childreen: cat.childreen ? buildCategories(parentId,[...cat.childreen,{\n                    _id: category._id,\n                    name: category.name,\n                    slug: category.slug,\n                    parentId: category.parentId,\n                    childreen: category.childreen,\n                }], category): []\n            })\n        }else{\n            myCategories.push({ \n                ...cat,\n                childreen: cat.childreen ? buildCategories(parentId,cat.childreen, category): []\n            }) \n        }\n\n    }\n    return myCategories; \n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            };\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true,\n            };\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updateCategory = buildCategories(category.parentId , state.categories, category);\n            console.log('updateCategory',updateCategory)\n\n            state = {\n                ...state,\n                categories: updateCategory, \n                loading: false,\n            };\n            break;\n        case categoryConstants.GET_ALL_CATEGORY_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n            };\n            break;\n    }\n    return state;\n};\n","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/product.action.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/UI/Input/index.js",["177","178"],"import React from 'react'\nimport {  Form,Label,Text} from 'react-bootstrap'\nconst Input = (props) => {\n    return (\n        <div>\n            <Form.Group controlId=\"formGridEmail\">\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                 <Form.Control \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    value={props.value}\n                    onChange={props.onChange}\n                />\n                <Form.Text className=\"text-muted\">\n                    {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n        </div>\n    )\n}\n\nexport default Input\n","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/Component/UI/Modal/index.js",[],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/initialData.action.js",["179"],"/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/reducers/product.reducer.js",["180","181"],"import { productConstants } from \"../actions/constance\";\n\nconst initState = {\n    products: [],\n    loading: false,\n    error: null,\n};\n\nexport default (state = initState, action) => {\n    switch (action.type){\n        case productConstants.GET_ALL_PRODUCT_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.products,\n                isLoading: false,\n            }\n            break;\n    }\n\n    return state;\n}","/Users/imran/Desktop/Front-End/Ecommerce-MERN/admin-app/src/actions/user.action.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":10,"column":43,"nodeType":"188","messageId":"189","endLine":10,"endColumn":57},{"ruleId":"190","severity":1,"message":"191","line":28,"column":6,"nodeType":"192","endLine":28,"endColumn":8,"suggestions":"193"},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"186","severity":1,"message":"196","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"197","line":16,"column":12,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"186","severity":1,"message":"198","line":16,"column":19,"nodeType":"188","messageId":"189","endLine":16,"endColumn":27},{"ruleId":"182","replacedBy":"199"},{"ruleId":"184","replacedBy":"200"},{"ruleId":"186","severity":1,"message":"197","line":16,"column":12,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"186","severity":1,"message":"198","line":16,"column":19,"nodeType":"188","messageId":"189","endLine":16,"endColumn":27},{"ruleId":"186","severity":1,"message":"201","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"202","line":2,"column":15,"nodeType":"188","messageId":"189","endLine":2,"endColumn":24},{"ruleId":"186","severity":1,"message":"203","line":2,"column":26,"nodeType":"188","messageId":"189","endLine":2,"endColumn":29},{"ruleId":"186","severity":1,"message":"204","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":17},{"ruleId":"182","replacedBy":"205"},{"ruleId":"184","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":17,"column":1,"nodeType":"209","endLine":63,"endColumn":2},{"ruleId":"210","severity":1,"message":"211","line":21,"column":5,"nodeType":"212","messageId":"213","endLine":61,"endColumn":6},{"ruleId":"214","severity":1,"message":"215","line":42,"column":9,"nodeType":"216","messageId":"217","endLine":47,"endColumn":19},{"ruleId":"182","replacedBy":"218"},{"ruleId":"184","replacedBy":"219"},{"ruleId":"207","severity":1,"message":"208","line":10,"column":1,"nodeType":"209","endLine":36,"endColumn":2},{"ruleId":"210","severity":1,"message":"211","line":11,"column":5,"nodeType":"212","messageId":"213","endLine":34,"endColumn":6},{"ruleId":"182","replacedBy":"220"},{"ruleId":"184","replacedBy":"221"},{"ruleId":"186","severity":1,"message":"222","line":18,"column":12,"nodeType":"188","messageId":"189","endLine":18,"endColumn":19},{"ruleId":"186","severity":1,"message":"223","line":18,"column":21,"nodeType":"188","messageId":"189","endLine":18,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":185,"column":49,"nodeType":"226","endLine":185,"endColumn":120},{"ruleId":"182","replacedBy":"227"},{"ruleId":"184","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":106,"column":18,"nodeType":"231","messageId":"217","endLine":106,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":108,"column":23,"nodeType":"231","messageId":"217","endLine":108,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":110,"column":25,"nodeType":"231","messageId":"217","endLine":110,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":112,"column":23,"nodeType":"231","messageId":"217","endLine":112,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":52,"column":1,"nodeType":"209","endLine":85,"endColumn":3},{"ruleId":"210","severity":1,"message":"211","line":53,"column":5,"nodeType":"212","messageId":"213","endLine":83,"endColumn":6},{"ruleId":"186","severity":1,"message":"232","line":2,"column":16,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"233","line":2,"column":22,"nodeType":"188","messageId":"189","endLine":2,"endColumn":26},{"ruleId":"186","severity":1,"message":"234","line":3,"column":5,"nodeType":"188","messageId":"189","endLine":3,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":9,"column":1,"nodeType":"209","endLine":21,"endColumn":2},{"ruleId":"210","severity":1,"message":"211","line":10,"column":5,"nodeType":"212","messageId":"213","endLine":18,"endColumn":6},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'getAllCategory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticate' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["237"],["235"],["236"],"'Form' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["235"],["236"],"'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'NavLink' is defined but never used.",["235"],["236"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["235"],["236"],["235"],["236"],"'reviews' is assigned a value but never used.","'setReviews' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["235"],["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Label' is defined but never used.","'Text' is defined but never used.","'initialDataConstants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"240","text":"241"},[903,905],"[auth.authenticate, dispatch]"]